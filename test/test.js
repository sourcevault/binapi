// Generated by LiveScript 1.6.0
(function(){
  var reg, binapi, com, printE, l, z, j, fail, P, K, subtract, sub;
  reg = require("../dist/registry");
  binapi = require("../dist/main");
  com = reg.com, printE = reg.printE;
  l = com.l, z = com.z, j = com.j;
  fail = reg.printE.fail("test/test2.js");
  P = binapi(function(path){
    var ret, i$, len$, I;
    ret = {};
    for (i$ = 0, len$ = path.length; i$ < len$; ++i$) {
      I = path[i$];
      ret[I] = true;
    }
    return ret;
  });
  K = P.flip.callback();
  if (!(K.flip || K.callback)) {
    fail(1);
  }
  subtract = function(flags, args){
    var a, b, temporary, output;
    a = args[0], b = args[1];
    if (flags.includes('flip')) {
      temporary = a;
      a = b;
      b = temporary;
    }
    output = a - b;
    if (flags.includes('abs')) {
      return Math.abs(output);
    }
    return output;
  };
  sub = binapi(subtract);
  if (!(sub(10, 5) === 5)) {
    fail(2);
  }
  if (!(sub.flip.subtract(10, 5) === -5)) {
    fail(3);
  }
  if (!(sub.flip.abs(10, 5) === 5)) {
    fail(4);
  }
}).call(this);
