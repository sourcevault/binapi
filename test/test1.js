// Generated by LiveScript 1.6.0
(function(){
  var com, l, z, binapi, reg, fail, F7, compute, out, E;
  com = require("../dist/common");
  l = com.l, z = com.z;
  binapi = require("../dist/main");
  reg = require("../dist/registry");
  fail = reg.printE.fail("test/test1.js");
  F7 = function(path, args, state){
    var number;
    number = args[0];
    switch (path.length) {
    case 0:
      return binapi.list(F7, number);
    case 1:
      switch (path[0]) {
      case "add":
        return binapi.list(F7, state + number);
      case "multiply":
        return binapi.list(F7, state * number);
      case "ret":
        return state;
      default:
        return fail(7);
      }
    default:
      return fail(7);
    }
  };
  try {
    compute = binapi.list(F7);
    out = compute(5).add(5).multiply(10).ret();
    if (!(out === 100)) {
      fail(7);
    }
  } catch (e$) {
    E = e$;
    l(E);
    fail(7);
  }
}).call(this);
